profiles {

    standard {
        executor = 'local'
    }

    // production environment
    prod {
        params {
            ENVIRONMENT               = 'prod'
            storage_bucket            = "pennsieve-prod-storage-use1"
            max_forks                 = 4
            antivirus_container       = "job-definition://prod-etl-antivirus-processor-job-use1"
            brukertiff_container      = "job-definition://prod-etl-brukertiff-processor-job-use1"
            cli_container             = "job-definition://prod-etl-data-cli-job-use1"
            czi_container             = "job-definition://prod-etl-czi-processor-job-use1"
            dicom_container           = "job-definition://prod-etl-dicom-processor-job-use1"
            freesurfer_container      = "job-definition://prod-etl-freesurfer-processor-job-use1"
            ometiff_container         = "job-definition://prod-etl-ometiff-processor-job-use1"
            nifti_container           = "job-definition://prod-etl-nifti-processor-job-use1"
            svs_container             = "job-definition://prod-etl-svs-processor-job-use1"
            standard_image_container  = "job-definition://prod-etl-standard-image-processor-job-use1"
            tabular_container         = "job-definition://prod-etl-tabular-processor-job-use1"
            video_container           = "job-definition://prod-etl-video-processor-job-use1"
            import_processor_template = "job-definition://prod-etl-<TYPE>-processor-job-use1"
            export_processor_template = "job-definition://prod-etl-<TYPE>-exporter-job-use1"
            memory                    = "8 GB"
        }
        process {
            executor = 'awsbatch'
            queue = 'prod-etl-default-standard-priority-queue-use1'
            scratch = '/docker_scratch'
        }
        executor {
            queueSize 		= 1000
            submitRateLimit = '10 sec'
            pollInterval = '10 sec'
        }
        env {
          AWS_REGION_NAME   	= 'us-east-1'
          ENVIRONMENT       	= "${ENVIRONMENT}"
          IMPORT_ID         	= "${IMPORT_ID}"
          AWS_CLI_FLAGS         = ""
          ASSET_DIRECTORY   	= "${ASSET_DIRECTORY}"
          STORAGE_DIRECTORY   	= "${ASSET_DIRECTORY}"
          ORGANIZATION_ID   	= "${ORGANIZATION_ID}"
          USER_ID           	= "${USER_ID}"
          JOB_TYPE          	= "${JOB_TYPE}"
          LOG_FORMAT        	= 'JSON'
        }
    }

    // development environment
    dev {
        params {
            ENVIRONMENT               = 'dev'
            img_tag                   = 'dev'
            storage_bucket            = "pennsieve-dev-storage-use1"
            max_forks                 = 4
            antivirus_container       = "job-definition://dev-etl-antivirus-processor-job-use1"
            brukertiff_container      = "job-definition://dev-etl-brukertiff-processor-job-use1"
            cli_container             = "job-definition://dev-etl-data-cli-job-use1"
            czi_container             = "job-definition://dev-etl-czi-processor-job-use1"
            dicom_container           = "job-definition://dev-etl-dicom-processor-job-use1"
            freesurfer_container      = "job-definition://dev-etl-freesurfer-processor-job-use1"
            ometiff_container         = "job-definition://dev-etl-ometiff-processor-job-use1"
            nifti_container           = "job-definition://dev-etl-nifti-processor-job-use1"
            svs_container             = "job-definition://dev-etl-svs-processor-job-use1"
            standard_image_container  = "job-definition://dev-etl-standard-image-processor-job-use1"
            tabular_container         = "job-definition://dev-etl-tabular-processor-job-use1"
            video_container           = "job-definition://dev-etl-video-processor-job-use1"
            import_processor_template = "job-definition://dev-etl-<TYPE>-processor-job-use1"
            export_processor_template = "job-definition://dev-etl-<TYPE>-exporter-job-use1"
            memory                    = "8 GB"

        }
        process {
            executor = 'awsbatch'
            queue = 'dev-etl-default-standard-priority-queue-use1'
            scratch = '/docker_scratch'
        }
        executor {
            queueSize = 1000
            submitRateLimit = '10 sec'
            pollInterval = '10 sec'
        }
        env {
          AWS_REGION_NAME   	= 'us-east-1'
          ENVIRONMENT       	= "${ENVIRONMENT}"
          IMPORT_ID         	= "${IMPORT_ID}"
          AWS_CLI_FLAGS         = ""
          ASSET_DIRECTORY    	= "${ASSET_DIRECTORY}"
          STORAGE_DIRECTORY   	= "${ASSET_DIRECTORY}"
          ORGANIZATION_ID   	= "${ORGANIZATION_ID}"
          USER_ID           	= "${USER_ID}"
          JOB_TYPE          	= "${JOB_TYPE}"
          LOG_FORMAT        	= 'JSON'
        }
    }

    // For local testing
    local {
        params {
            ENVIRONMENT               = 'local'
            img_tag                   = 'local'
            storage_bucket            = "local-storage-pennsieve"
            max_forks                 = 4
            antivirus_container       = "pennsieve/antivirus-processor:latest"
            brukertiff_container      = "pennsieve/brukertiff-processor:latest"
            cli_container             = "pennsieve/etl-data-cli:latest"
            czi_container             = "pennsieve/czi-processor:latest"
            dicom_container           = "pennsieve/dicom-processor:latest"
            freesurfer_container      = "pennsieve/base-processor-freesurfer:latest"
            ometiff_container         = "pennsieve/ometiff-processor:latest"
            nifti_container           = "pennsieve/nifti-processor:latest"
            svs_container             = "pennsieve/svs-processor:latest"
            standard_image_container  = "pennsieve/standard-image-processor:latest"
            tabular_container         = "pennsieve/tabular-processor:latest"
            video_container           = "pennsieve/video-processor:latest"
            import_processor_template = "pennsieve/<TYPE>-processor:latest"
            export_processor_template = "pennsieve/<TYPE>-exporter:latest"
            memory                    = "3.5 GB"
        }
        docker {
            enabled = true
            runOptions = "--network ${NETWORK_NAME}"
        }
        process {
            echo = true
            executor = 'local'
            scratch = '/tmp'
        }
        executor {
            queueSize = 1000
            submitRateLimit = '10 sec'
            pollInterval = '10 sec'
        }
        aws {
            client {
                endpoint = 'localhost:4572'
                protocol = 'http'
            }
        }
        env {
          AWS_ACCESS_KEY_ID     = 'foo'
          AWS_SECRET_ACCESS_KEY = 'foo'
          AWS_CLI_FLAGS         = '--endpoint-url=http://localstack:4572'
          AWS_BATCH_JOB_ID      = 'jobId'
          AWS_REGION_NAME       = 'us-east-1'
          ENVIRONMENT           = 'local'
          IMPORT_ID             = 'import-id'
          JOB_TYPE              = "job-type"
          LOG_FORMAT            = 'RAW'
          ORGANIZATION_ID       = "test-org-id"
          S3_ENDPOINT           = 'http://localstack:4572'
          SSM_ENDPOINT          = 'http://localstack:4583'
          ASSET_DIRECTORY       = "${ASSET_DIRECTORY}"
          STORAGE_DIRECTORY   	= "${ASSET_DIRECTORY}"
          SCRATCH_DIR       	= "/tmp"
          USER_ID               = "test-user-id"
        }
    }

}
